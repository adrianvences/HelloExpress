

// common JS Import Syntax// es6 syntax is avaiable like in react but most documentaion is only in this syntax
const express = require("express");
const app = express();

const gizmos = [
  {
    id:1,
    name: 'gizmo 1'

  },
  {
    id:2,
    name: 'gizmo 2'

  },
  {
    id:3,
    name: 'gizmo 3'

  },
  {
    id:4,
    name: 'gizmo 4'

  }
]

app.use(express.json());

// req is short for request
// res is short for response
// this is a get handler to get this route // this first argument is the path the second arguement is the call back function (how to handle route)
// the parameters are how we have acess to request and response
// middleware ,route,and controller 
app.get("/api", (req, res) => {
  res.send("Our express api server is now sending this over to the browser<h1>HELLO00</h1>");
});

// react axios.get(http://localhost:8000/api/gizmos)
app.get('/api/gizmos', (req, res) => {
  res.json(gizmos);
  const newGizmo = {
    id: gizmos.length+1 ,
    // name: req.body.name + ' ' + (gizmos.length +1) 
    name : `${req.body.name} ${gizmos.length + 1}`
  }

  // we use json to send js object
  gizmos.push(newGizmo);
  res.status(201).json(gizmos[gizmos.length-1]);
});





// this exposes the port to the internet // second arguement is a call back function // console logging the port 
const server = app.listen(8000, () =>
  console.log(`Server is locked and loaded (listening) on port ${server.address().port}!`)
);

// instead of node server.js we could use nodemon server.js and that will restart on server after each save
// if we just use node server.js we would have to manually restart server